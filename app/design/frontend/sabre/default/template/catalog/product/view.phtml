<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
/* @var $this Sabre_Catalog_Block_Product_View */
?>
<?php
$_helper = $this->helper('catalog/output');
$_product = $this->getProduct();
$allArticles = Mage::helper('sabre_configuration')->getAllProductAttributeImage('a_article');
$colorImgPaths = Mage::helper('sabre_configuration')->getAllProductAttributeImage('a_filter_color');
?>

<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>

<div id="messages_product_view"><?php echo $this->getMessagesBlock()->toHtml() ?></div>
<div class="product-view">
    <div class="product-essential">
        <form action="<?php echo $this->getSubmitUrl($_product, array('_secure' => $this->_isSecure())); ?>"
              method="post" autocomplete="off"
              id="product_addtocart_form"<?php if ($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
            <?php echo $this->getBlockHtml('formkey') ?>
            <div class="no-display">
                <input type="hidden" name="product" value="<?php echo $_product->getId() ?>"/>
                <input type="hidden" name="related_product" id="related-products-field" value=""/>
            </div>

            <div class="product-img-box">
                <?php echo $this->getChildHtml('media') ?>
            </div>


            <div class="product-shop">

                <div class="product-name">
                    <h1>
                        <span class="article">
                            <?php echo $_product->getAttributeText('a_article'); ?>
                        </span>
                        <?php if ($_product->getAModel()): ?>
                            <span class="modele"><?php echo $_product->getAttributeText('a_model'); ?></span>
                        <?php endif; ?>
                        <?php if ($_product->getColor()): ?>
                            <span class="couleur"><?php echo $_product->getAttributeText('color'); ?></span>
                        <?php endif; ?>
                    </h1>
                </div>
                <div class="caract">
                    <?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?>
                </div>
                <div class="size">
                    <?php if ($_product->getData('a_size')): ?>
                        <?php echo $_product->getData('a_size'); ?>
                    <?php endif;?>
                </div>
                <div class="product_info">
                    <?php echo $this->getChildHtml('product_info') ?>
                </div>
                <?php echo $this->getProductsColorVariantBlockHtml() ?>

                <?php echo $this->getChildHtml('alert_urls') ?>
                <?php echo $this->getChildHtml('extrahint') ?>

                <?php if (!$this->hasOptions()): ?>
                    <div class="add-to-box">
                        <?php $type_Cuilliere = Mage::helper('sabre_configuration')->getProductTypeCuilliere($_product);?>
                        <?php if($type_Cuilliere):?>
                            <div class="sizingGuide">
                                <a id="sizing-guide"><?php echo $this->__('Sizing guide');?></a>
                                <div class="block_sizing">
                                    <?php echo $this->getChildHtml('sizing-guide') ?>
                                </div>
                            </div>
                        <?php endif;?>
                        <?php if ($_product->isSaleable()): ?>
                            <?php echo $this->getChildHtml('addtocart') ?>
                        <?php else: ?>
                            <div class="no-stock"><span><?php echo $this->__('The product will be available soon');?></span></div>
                        <?php endif; ?>
                    </div>
                    <?php echo $this->getChildHtml('extra_buttons') ?>
                <?php endif; ?>

                <?php echo $this->getChildHtml('other'); ?>

                <?php if ($_product->isSaleable() && $this->hasOptions()): ?>
                    <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                <?php endif; ?>

            </div>

            <div class="clearer"></div>
            <?php if ($_product->isSaleable() && $this->hasOptions()): ?>
                <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
            <?php endif; ?>
        </form>
        <script type="text/javascript">
            //<![CDATA[
            var productAddToCartForm = new VarienForm('product_addtocart_form');
            productAddToCartForm.submit = function (button, url) {
                if (this.validator.validate() && productAddToCartForm.validator.form[3].value>0) {
                    var form = this.form;
                    var oldUrl = form.action;

                    if (url) {
                        form.action = url;
                    }
                    var e = null;
                    try {
                        this.form.submit();
                    } catch (e) {
                    }
                    this.form.action = oldUrl;
                    if (e) {
                        throw e;
                    }

                    if (button && button != 'undefined') {
                        button.disabled = true;
                    }
                }
            }.bind(productAddToCartForm);

            productAddToCartForm.submitLight = function (button, url) {
                if (this.validator) {
                    var nv = Validation.methods;
                    delete Validation.methods['required-entry'];
                    delete Validation.methods['validate-one-required'];
                    delete Validation.methods['validate-one-required-by-name'];
                    // Remove custom datetime validators
                    for (var methodName in Validation.methods) {
                        if (methodName.match(/^validate-datetime-.*/i)) {
                            delete Validation.methods[methodName];
                        }
                    }

                    if (this.validator.validate()) {
                        if (url) {
                            this.form.action = url;
                        }
                        this.form.submit();
                    }
                    Object.extend(Validation.methods, nv);
                }
            }.bind(productAddToCartForm);
            //]]>
        </script>
    </div>

    <?php echo $this->getProductsArticleVariantBlockHtml()?>

    <?php echo $this->getChildHtml('upsell_products') ?>

    <?php echo $this->getChildHtml("reassurance"); ?>

    <?php echo $this->getChildHtml("model_gallery_wrapper"); ?>

    <?php if (Mage::registry('current_category')): ?>

        <div class="category_description">
            <?php
            $current_category = Mage::registry('current_category');
            echo $current_category->getDescription();
            ?>
        </div>
    <?php endif; ?>
</div>

